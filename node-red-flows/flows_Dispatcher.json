[
    {
        "type": "tab",
        "id": "2f36ab1a.d0c954",
        "label": "Dispatcher"
    },
    {
        "id": "b788e70f.487718",
        "type": "mqtt-dynamic-broker",
        "z": "2f36ab1a.d0c954",
        "broker": "{mqtt_dynamic.broker}",
        "port": "1883",
        "clientid": "{mqtt_dynamic.clientid}_async",
        "usetls": false,
        "verifyservercert": true,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": false,
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "birthTopic": "client/{mqtt_dynamic.clientid}/config",
        "birthQos": "1",
        "birthRetain": "true",
        "birthPayload": "{mqtt_dynamic.clientconfig}"
    },
    {
        "id": "73cb19d6.de22d8",
        "type": "mqtt-dynamic-broker",
        "z": "2f36ab1a.d0c954",
        "broker": "{mqtt_dynamic.broker}",
        "port": "1883",
        "clientid": "{mqtt_dynamic.clientid}",
        "usetls": false,
        "verifyservercert": true,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": false,
        "willTopic": "",
        "willQos": "0",
        "willRetain": null,
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": null,
        "birthPayload": ""
    },
    {
        "id": "159f16c3.ea60e9",
        "type": "mqtt-dynamic in",
        "z": "2f36ab1a.d0c954",
        "name": "sync",
        "topic": "{mqtt_dynamic.clientid}",
        "broker": "73cb19d6.de22d8",
        "async": "",
        "x": 74,
        "y": 109,
        "wires": [
            [
                "5033105d.4c52c"
            ]
        ]
    },
    {
        "id": "aae66842.551998",
        "type": "inject",
        "z": "2f36ab1a.d0c954",
        "name": "Test hostname",
        "topic": "",
        "payload": "hostname",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 119.28571319580078,
        "y": 394.2857360839844,
        "wires": [
            [
                "5033105d.4c52c"
            ]
        ]
    },
    {
        "id": "51ad98c3.ae5268",
        "type": "execute",
        "z": "2f36ab1a.d0c954",
        "command": " ",
        "addpay": true,
        "append": "",
        "useSpawn": true,
        "name": "Exec payload",
        "x": 882.7142333984375,
        "y": 285.6199645996094,
        "wires": [
            [
                "d93a799f.6813c8",
                "da4e7177.76ea6",
                "933b6237.c0614",
                "a68bc475.cf4e88"
            ]
        ]
    },
    {
        "id": "9a393a6d.89fd58",
        "type": "mqtt-dynamic complete",
        "z": "2f36ab1a.d0c954",
        "name": "Complete",
        "x": 1307.285758972168,
        "y": 88.42863273620605,
        "wires": [
            [
                "cd1da007.7b54d"
            ]
        ]
    },
    {
        "id": "5398ae93.322b8",
        "type": "mqtt-dynamic out",
        "z": "2f36ab1a.d0c954",
        "name": "/status",
        "topic": "{mqtt_dynamic.clientid}/status",
        "qos": "1",
        "retain": "true",
        "broker": "b788e70f.487718",
        "x": 456.5713882446289,
        "y": 89.57146549224854,
        "wires": []
    },
    {
        "id": "9870be27.37779",
        "type": "mqtt-dynamic in",
        "z": "2f36ab1a.d0c954",
        "name": "/async",
        "topic": "{mqtt_dynamic.clientid}/async",
        "broker": "b788e70f.487718",
        "async": "true",
        "x": 70.71428298950195,
        "y": 236.57145500183105,
        "wires": [
            [
                "5033105d.4c52c"
            ]
        ]
    },
    {
        "id": "da4e7177.76ea6",
        "type": "mqtt-dynamic out",
        "z": "2f36ab1a.d0c954",
        "name": "/output",
        "topic": "{mqtt_dynamic.clientid}/output",
        "qos": "1",
        "retain": "",
        "broker": "b788e70f.487718",
        "x": 1220.571388244629,
        "y": 274.4285697937012,
        "wires": []
    },
    {
        "id": "d93a799f.6813c8",
        "type": "switch",
        "z": "2f36ab1a.d0c954",
        "name": "HasExitCode",
        "property": "payload.exitcode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 1096.8571701049805,
        "y": 88.5715160369873,
        "wires": [
            [
                "9a393a6d.89fd58"
            ]
        ]
    },
    {
        "id": "8c0930f5.febc8",
        "type": "file",
        "z": "2f36ab1a.d0c954",
        "name": "Log",
        "filename": "./node-red-flows/logs/log.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1404.5714111328125,
        "y": 361.4285583496094,
        "wires": []
    },
    {
        "id": "133801d9.f16bee",
        "type": "inject",
        "z": "2f36ab1a.d0c954",
        "name": "Test controller.",
        "topic": "",
        "payload": "{\"command\":\"hostname\", \"callbacktopic\" : \"\"}",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 111.42857360839844,
        "y": 460.2857360839844,
        "wires": [
            [
                "5033105d.4c52c"
            ]
        ]
    },
    {
        "id": "5033105d.4c52c",
        "type": "function",
        "z": "2f36ab1a.d0c954",
        "name": "SetupCallback",
        "func": "try{\n    // Parse JSON and fetch out the cmd and \n    // callback topic.\n    console.log(msg.payload)\n    var payload = JSON.parse(msg.payload);\n    msg.requestpayload = payload;\n    msg.callbacktopic = payload.callbacktopic;\n    msg.payload = payload.command;\n    msg.cwd = payload.cwd;\n    var env = global.get('env');\n    msg.env = env.get(payload.env);\n}catch(e){\n    console.log(e)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 333.0714111328125,
        "y": 288.5714416503906,
        "wires": [
            [
                "5398ae93.322b8",
                "cefc1dda.7ba13"
            ]
        ]
    },
    {
        "id": "cd1da007.7b54d",
        "type": "switch",
        "z": "2f36ab1a.d0c954",
        "name": "",
        "property": "callbacktopic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 1114.0715255737305,
        "y": 185.42860221862793,
        "wires": [
            [
                "b0e9b472.cdcf48"
            ]
        ]
    },
    {
        "id": "da10be31.a4f09",
        "type": "mqtt-dynamic out",
        "z": "2f36ab1a.d0c954",
        "name": "Callback",
        "topic": "",
        "qos": "1",
        "retain": "",
        "broker": "73cb19d6.de22d8",
        "x": 1513.214225769043,
        "y": 187.42860221862793,
        "wires": []
    },
    {
        "id": "b0e9b472.cdcf48",
        "type": "change",
        "z": "2f36ab1a.d0c954",
        "name": "Topic and payload",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "callbacktopic",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "requestpayload.exitcode",
                "pt": "msg",
                "to": "payload.exitcode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "requestpayload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1306.1428146362305,
        "y": 186.14289665222168,
        "wires": [
            [
                "da10be31.a4f09"
            ]
        ]
    },
    {
        "id": "8d4aa69f.1e2428",
        "type": "inject",
        "z": "2f36ab1a.d0c954",
        "name": "Win-Dir ",
        "topic": "",
        "payload": "{\"command\":\"cmd /c dir\", \"cwd\" :\"c:\\\\temp\", \"callbacktopic\" : \"\"}",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 91,
        "y": 518,
        "wires": [
            [
                "5033105d.4c52c"
            ]
        ]
    },
    {
        "id": "933b6237.c0614",
        "type": "debug",
        "z": "2f36ab1a.d0c954",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1051,
        "y": 510.85711669921875,
        "wires": []
    },
    {
        "id": "cefc1dda.7ba13",
        "type": "switch",
        "z": "2f36ab1a.d0c954",
        "name": "Commands",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setenv",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 527.5714416503906,
        "y": 282.14288330078125,
        "wires": [
            [
                "ff324216.8651e"
            ],
            [
                "51ad98c3.ae5268"
            ]
        ]
    },
    {
        "id": "ff324216.8651e",
        "type": "function",
        "z": "2f36ab1a.d0c954",
        "name": "SetEnv",
        "func": "var req = msg.requestpayload;\nif(req.env){\n    var env = global.get('env');\n    env.set(req.env)\n}\nif(req.logdir){\n    var logutil = global.get('log');\n    var created = logutil.setlogdir(req.logdir)\n    if(!created){\n        msg.payload = \"ERR_NOLOGDIR\";\n        return msg;\n    }\n}\nmsg.payload = 'hostname'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 684.28564453125,
        "y": 126.85712814331055,
        "wires": [
            [
                "51ad98c3.ae5268"
            ]
        ]
    },
    {
        "id": "2557ee98.bc49a2",
        "type": "inject",
        "z": "2f36ab1a.d0c954",
        "name": "setenv",
        "topic": "",
        "payload": "{\"command\": \"setenv\",\"env\": {\"TEST\": \"TestValue\" } }",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 91.77777862548828,
        "y": 580.6666259765625,
        "wires": [
            [
                "5033105d.4c52c"
            ]
        ]
    },
    {
        "id": "7756923c.c7ef4c",
        "type": "inject",
        "z": "2f36ab1a.d0c954",
        "name": "PrintEnv-SH",
        "topic": "",
        "payload": "{\"command\":\"printenv TEST\", \"cwd\" :\"/usr\" , \"env\" : { \"TEST\" : \"InjectedTestValue\" }}",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 116.5,
        "y": 653,
        "wires": [
            [
                "5033105d.4c52c"
            ]
        ]
    },
    {
        "id": "12510a55.257166",
        "type": "inject",
        "z": "2f36ab1a.d0c954",
        "name": "setenv logdir",
        "topic": "",
        "payload": "{\"command\" : \"setenv\" , \"logdir\" :\"./testlog/\" }",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 136.5,
        "y": 720,
        "wires": [
            [
                "5033105d.4c52c"
            ]
        ]
    },
    {
        "id": "a68bc475.cf4e88",
        "type": "function",
        "z": "2f36ab1a.d0c954",
        "name": "setlog",
        "func": "var logutil = global.get('log');\nvar pid = msg.pid;\nmsg.filename = logutil.resolveFilename(pid);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1183.5,
        "y": 362,
        "wires": [
            [
                "8c0930f5.febc8"
            ]
        ]
    }
]